{"version":3,"sources":["components/card-components/card-components.jsx","components/card-list-components/card-list-component.jsx","components/search-box-component/search-box-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","SearchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+UACaA,EAAK,SAACC,GACf,OAAQ,sBAAKC,UAAU,iBAAf,UACJ,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAA4BL,EAAMI,QAAQE,MAAjCN,EAAMI,QAAQC,IACvB,4BAAIL,EAAMI,QAAQG,YCHbC,EAAS,SAACR,GAEvB,OACI,qBAAKC,UAAU,YAAf,SAEID,EAAMS,SAASC,KACb,SAAAN,GACE,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCNzBM,G,MAAU,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,YAAYC,EAAgB,EAAhBA,aAClC,OAAQ,uBAAOC,KAAK,OAAOF,YAAaA,EAAcG,SAAUF,MCsCpDG,E,kDApCb,aAAc,IAAD,8BACX,gBAeFH,aAAa,SAACI,GACV,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAftC,EAAKC,MAAM,CACTb,SAAS,GAGTU,YAAY,IANH,E,qDAWb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACT,SAASkB,S,oBAKvC,WACE,MAA6BC,KAAKN,MAA3Bb,EAAP,EAAOA,SAASU,EAAhB,EAAgBA,YACVU,EAAiBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC3CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYc,wBAEnD,OACE,sBAAKhC,UAAU,MAAf,UACA,cAAC,EAAD,CAAWW,YAAY,iBAAiBC,aAAce,KAAKf,eAC1D,cAAC,EAAD,CAAUJ,SAAUoB,W,GA5BTK,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.90d96ca8.chunk.js","sourcesContent":["import \"./card.styles.css.css\"\r\nexport const Card=(props)=>{\r\n    return (<div className=\"card-container\">\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h1 key={props.monster.id}>{props.monster.name}</h1>\r\n        <p>{props.monster.email}</p>\r\n        </div>)\r\n}","import \"./card-list-component-style.css\"\r\nimport {Card} from \"../card-components/card-components\"\r\nexport const CardList=(props)=>{\r\n    \r\nreturn (\r\n    <div className=\"card-list\">\r\n    {\r\n        props.monsters.map(\r\n          monster=> {\r\n            return <Card key={monster.id} monster={monster}/>\r\n          }\r\n        )\r\n      }\r\n    </div>\r\n)\r\n}","import \"./26.1 search-box.styles.css.css\"\r\n\r\n\r\nexport const SearchBox=({placeholder,handleChange})=>{\r\n   return  <input type=\"text\" placeholder={placeholder}  onChange={handleChange}/>\r\n}","\nimport './App.css';\nimport React from 'react';\nimport { CardList } from './components/card-list-components/card-list-component';\nimport { SearchBox } from './components/search-box-component/search-box-component';\nclass App extends React.Component{\n  constructor(){\n    super()\n    this.state={\n      monsters:[\n       \n      ],\n      SearchField:\"\"\n    }\n    \n  }\n\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response=>response.json())\n    .then(users=>this.setState({monsters:users}))\n  }\n  handleChange=(e)=>{\n      this.setState({SearchField:e.target.value})\n  }\n  render(){\n    const {monsters,SearchField}=this.state\n    const filteredMonsters=monsters.filter(monster=>\n       monster.name.toLowerCase().includes(SearchField.toLocaleLowerCase())\n    )\n    return (\n      <div className=\"App\">\n      <SearchBox placeholder=\"Search Monster\" handleChange={this.handleChange} />\n       <CardList monsters={filteredMonsters}/>\n      \n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}